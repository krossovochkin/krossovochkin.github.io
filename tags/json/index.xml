<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>json on Vasya Drobushkov</title>
    <link>https://krossovochkin.com/tags/json/</link>
    <description>Recent content in json on Vasya Drobushkov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 08 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://krossovochkin.com/tags/json/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Custom Reactive JSON parsing</title>
      <link>https://krossovochkin.com/posts/2021_06_08_custom_reactive_json_parsing/</link>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://krossovochkin.com/posts/2021_06_08_custom_reactive_json_parsing/</guid>
      <description>Introduction Parsing JSON strings is a must-have on most Android projects that have server-client communication (of course there are some other formats like XML or Protobuf, but I guess JSON is the most common one at least at the moment). Setting up this communication is relatively straightforward: choose a library, add it to a project, describe models, create mappers, and so on. There are a bunch of various libraries to parse JSON: good old Gson, Jackson, or more modern Moshi, kotlinx-serialization and there are more.</description>
    </item>
    
  </channel>
</rss>
