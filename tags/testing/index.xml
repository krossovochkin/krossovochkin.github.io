<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testing on Krossovochkin</title>
    <link>https://krossovochkin.github.io/tags/testing/</link>
    <description>Recent content in testing on Krossovochkin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2020 Vasya Drobushkov</copyright>
    <lastBuildDate>Thu, 05 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://krossovochkin.github.io/tags/testing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>From RxJava to Kotlin Flow: Testing</title>
      <link>https://krossovochkin.github.io/posts/2020_03_05_from_rxjava_to_kotlin_flow_testing/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://krossovochkin.github.io/posts/2020_03_05_from_rxjava_to_kotlin_flow_testing/</guid>
      <description>Source
 This post is part of series of comparing RxJava to Kotlin Flow. Previous articles were about Threading, Backpressure, Error Handling, Stream Types, Throttling
 
Introduction Testing is a crucial part of whole development. Testing allows you to write programs in a reliable fashion, prevent regressions and have many other goodies. I won’t go through the list of advantages of writing tests in this article though. In testing it is important to have tools which allow you to write reliable tests and also tools which allow you to test your business logic.</description>
    </item>
    
  </channel>
</rss>